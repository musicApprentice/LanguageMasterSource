{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smcgo\\\\OneDrive\\\\Documents\\\\CS320\\\\LanguageMaster\\\\LanguageMasterSource\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Route from 'react-router-dom';\nimport Login from './components/login';\nimport Banner from './components/banner';\nimport SignUpForm from './components/signup';\nimport CreateClassPopup from './components/createClassPopup';\nimport ClassAsgmts from './components/classAsgmts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const handleLoginClick = () => {\n    setShowLogin(true);\n    setShowSignup(false); // Hide the signup form when showing the login form\n  };\n  const handleSignupClick = () => {\n    setShowSignup(true);\n    setShowLogin(false); // Hide the login form when showing the signup form\n  };\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"title-button\",\n      onClick: refreshPage,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LanguageMaster Alpha Release\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: handleLoginClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: handleSignupClick,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), showLogin && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), showSignup && /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {\n      handleClick: () => {\n        setShowSignup(true);\n        setShowLogin(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"createClassBtn\",\n      onClick: () => setModalShow(true),\n      children: \"Create New Class\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateClassPopup, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      handleSubmission: className => true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/class-asgmts\",\n      component: ClassAsgmts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"unxj8/+ebWzGX4OeX9jcWPFE1qM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","Login","Banner","SignUpForm","CreateClassPopup","ClassAsgmts","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showLogin","setShowLogin","showSignup","setShowSignup","modalShow","setModalShow","handleLoginClick","handleSignupClick","refreshPage","window","location","reload","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","id","show","onHide","handleSubmission","path","component","_c","$RefreshReg$"],"sources":["C:/Users/smcgo/OneDrive/Documents/CS320/LanguageMaster/LanguageMasterSource/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Route from 'react-router-dom';\r\nimport Login from './components/login';\r\nimport Banner from './components/banner';\r\nimport SignUpForm from './components/signup';\r\nimport CreateClassPopup from './components/createClassPopup';\r\nimport ClassAsgmts from './components/classAsgmts';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'; \r\n\r\nconst App = () => {\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleLoginClick = () => {\r\n    setShowLogin(true);\r\n    setShowSignup(false); // Hide the signup form when showing the login form\r\n  };\r\n\r\n  const handleSignupClick = () => {\r\n    setShowSignup(true);\r\n    setShowLogin(false); // Hide the login form when showing the signup form\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <button className=\"title-button\" onClick={refreshPage}>\r\n        <h1>LanguageMaster Alpha Release</h1>\r\n      </button>\r\n      <div>\r\n        <button className=\"login-button\" onClick={handleLoginClick}>Login</button>\r\n        <button className=\"login-button\" onClick={handleSignupClick}>Sign up</button>\r\n      </div>\r\n      {showLogin && <Login />}\r\n      {showSignup && <SignUpForm />}\r\n      <Banner handleClick={() => {\r\n        setShowSignup(true);\r\n        setShowLogin(false);\r\n      }} />    \r\n\r\n      <button id=\"createClassBtn\" onClick={() => setModalShow(true)}>\r\n        Create New Class\r\n      </button>\r\n\r\n      {/* Use the handleSubmission prop to provide the function with which to communicate with server */}\r\n      {/* It takes the className string submitted by the user and should send that to the server(?) */}\r\n      {/* Right now I have it set up to handle a return of true (success) or false (failure) */}\r\n      {/* On success, exit the popup and show updated classes page/menu */}\r\n      {/* On failure (invalid class name / already exists), display a message prompting user to try a different name */}\r\n      <CreateClassPopup\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        handleSubmission={(className) => true}\r\n      />\r\n\r\n      <Route path=\"/class-asgmts\" component={ClassAsgmts} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}