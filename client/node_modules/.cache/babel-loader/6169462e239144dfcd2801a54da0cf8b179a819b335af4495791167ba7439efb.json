{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Desktop\\\\CS 320\\\\LanguageMasterSrc\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Login from './components/login';\nimport Banner from './components/banner';\nimport SignUpForm from './components/signup';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  const toggleForms = () => {\n    if (!showLogin && !showSignup) {\n      setShowLogin(true); // If neither is shown, show login by default\n    } else if (showSignup) {\n      setShowSignup(false);\n      setShowLogin(true); // If signup is shown, switch to login\n    } else if (showLogin) {\n      setShowLogin(false);\n      setShowSignup(true); // If login is shown, switch to signup\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Language Master\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: toggleForms,\n        children: [showLogin ? 'Signup' : 'Login', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), showLogin && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }, this), showSignup && /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {\n      handleClick: () => setShowSignup(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"TEqm0Uq1Y1TaIphOT9v4LIAB3HM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Banner","SignUpForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showLogin","setShowLogin","showSignup","setShowSignup","toggleForms","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/jason/OneDrive/Desktop/CS 320/LanguageMasterSrc/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Login from './components/login';\nimport Banner from './components/banner';\nimport SignUpForm from './components/signup';\nimport './App.css';\n\nconst App = () => {\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n\n  const toggleForms = () => {\n    if (!showLogin && !showSignup) {\n      setShowLogin(true); // If neither is shown, show login by default\n    } else if (showSignup) {\n      setShowSignup(false);\n      setShowLogin(true); // If signup is shown, switch to login\n    } else if (showLogin) {\n      setShowLogin(false);\n      setShowSignup(true); // If login is shown, switch to signup\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h1>Language Master</h1>\n        <button className=\"login-button\" onClick={toggleForms}>\n          {showLogin ? 'Signup' : 'Login'} {/* Button text changes based on state */}\n        </button>\n        {showLogin && <Login />}\n        {showSignup && <SignUpForm />}\n      </div>\n      <Banner handleClick={() => setShowSignup(true)} />\n    </>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACJ,SAAS,IAAI,CAACE,UAAU,EAAE;MAC7BD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM,IAAIC,UAAU,EAAE;MACrBC,aAAa,CAAC,KAAK,CAAC;MACpBF,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM,IAAID,SAAS,EAAE;MACpBC,YAAY,CAAC,KAAK,CAAC;MACnBE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBd,OAAA;QAAQe,SAAS,EAAC,cAAc;QAACC,OAAO,EAAEP,WAAY;QAAAC,QAAA,GACnDL,SAAS,GAAG,QAAQ,GAAG,OAAO,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,EACRT,SAAS,iBAAIL,OAAA,CAACJ,KAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtBP,UAAU,iBAAIP,OAAA,CAACF,UAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACNd,OAAA,CAACH,MAAM;MAACoB,WAAW,EAAEA,CAAA,KAAMT,aAAa,CAAC,IAAI;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClD,CAAC;AAEP,CAAC;AAACV,EAAA,CA7BID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}